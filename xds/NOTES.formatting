It appears that imf files really do obey the following struct from image.h:
tldavis_629:od -X W* | more

0000000 e9ed0000 00000400 0000c000 010000c0
0000020 00050000 00000000 00000000 00000000
0000040 00000000 00000000 00000000 00000000
*
0001000 01286d61 676e6176 69657720 20202020

/* Header record for image files */
struct image_head
{   unsigned long id;
    unsigned long off;
    unsigned long len;
    unsigned short hgh;
    unsigned short wid;
    unsigned short typ;
};


The id is 0xE9ED0000 (for magic checking)
offset is perhaps number of longwords (it's 4x lower than 0x1000)
length is ??? perhaps strange.


.IMA files:

Appears that they are different, and are ACR-NEMA 1.0 files.


tldavis_699:od -X *.ima | more
0000000 08000000 04000000 e8000000 08000100
0000020 04000000 e8250200 08001000 0c000000
0000040 4143522d 4e454d41 20312e30 08002000
0000060 0a000000 31393932 2e31312e 31330800
0000100 30000e00 00003130 3a32343a 33362e30
0000120 30303020 08004000 02000000 00000800
0000140 41000800 0000494d 41205343 414e0800
0000160 60000200 00004d52 08007000 08000000
0000200 5349454d 454e5320 08008000 1a000000

od -C *.ima | more
0000000  \b  \0  \0  \0 004  \0  \0  \0 350  \0  \0  \0  \b  \0 001  \0
0000020 004  \0  \0  \0 350   % 002  \0  \b  \0 020  \0  \f  \0  \0  \0
0000040   A   C   R   -   N   E   M   A       1   .   0  \b  \0      \0
0000060  \n  \0  \0  \0   1   9   9   2   .   1   1   .   1   3  \b  \0
0000100   0  \0 016  \0  \0  \0   1   0   :   2   4   :   3   6   .   0
0000120   0   0   0      \b  \0   @  \0 002  \0  \0  \0  \0  \0  \b  \0
0000140   A  \0  \b  \0  \0  \0   I   M   A       S   C   A   N  \b  \0
0000160   `  \0 002  \0  \0  \0   M   R  \b  \0   p  \0  \b  \0  \0  \0
0000200   S   I   E   M   E   N   S      \b  \0 200  \0 032  \0  \0  \0
0000220   H   Y   K   S   /   M   E   I   L   A   H   T   I            
0000240                                          \b  \0 220  \0 032  \0
0000260  \0  \0                                                        
0000300                                                  \b  \0 020 020
0000320  \f  \0  \0  \0   M   A   G   N   E   T   O   M                
0000340  \b  \0 220 020  \f  \0  \0  \0   G   B   S       I   I   I    
0000360                  \t  \0  \0  \0 004  \0  \0  \0 236  \0  \0  \0
0000400  \t  \0 020  \0 016  \0  \0  \0   S   P   I       R   E   L   E
0000420   A   S   E       1      \t  \0 021  \0  \f  \0  \0  \0   S   I
0000440   E   M   E   N   S       M   E   D      \t  \0 020 020 022  \0
0000460  \0  \0   S   P   I       V   E   R   S   I   O   N           0
0000500   1   .   0   0  \t  \0 025 020 032  \0  \0  \0   0   0   0   S
0000520   0   0   M   R   0   0   1   9   9   2   1   1   1   3   1   0
0000540   5   1   3   2   2   4  \t  \0 020 021 006  \0  \0  \0   M   R
0000560       2   .   0  \t  \0   0 021 002  \0  \0  \0  \0  \b  \t  \0
0000600   1 021 002  \0  \0  \0  \0 026  \t  \0   @ 021 002  \0  \0  \0

What does this mean for us??? Who knows.


Apparently the following

#define NGR                 32     /* Maximum number of ACR-Groups         */
#define NOE                 8      /* Maximum number of entries in NUM2 hdr*/

struct ACR                 /* Organizational data for the ACR-NEMA Header  */
 {
  int   ngrps;             /*  Number of groups                            */
  char *grp[NGR][8];       /*  Group numbers Hex (strings)                 */
  int   siz[NGR];          /*  Group sizes                                 */
  int   off[NGR];          /*  Group offsets into header                   */
 };

/*______________________ RADGOP IMAGE HEADER STRUCTURE ____________________*/
 
struct RAD_IMAGE_HEAD 
  {
   struct image_head ih;
   char mc;
  };


